
1 ) Solving problems using array functions on rest countries data.

Get all the countries from Asia continent /region using Filter function

SOLN:
   var xhr = new XMLHttpRequest();
   xhr.open("GET", "https://restcountries.eu/rest/v2/all");
   xhr.onload = function () {
   
    var data = JSON.parse(this.response);
    let asia = data.filter((elements)=>{
      if(elements.region == "Asia"){
        return elements;
      }
    });  
    console.log(asia);
    
   };

 xhr.send();
 
 OUTPUT:
 (50) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…},
 {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…},
 {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]
 
 Get all the countries with a population of less than 2 lakhs using Filter function
 
 SOLN:
 
 var xhr = new XMLHttpRequest();
   xhr.open("GET", "https://restcountries.eu/rest/v2/all");
   xhr.onload = function () {
   
    var data = JSON.parse(this.response);
    let population = data.filter((elements)=>{
      if(elements.population < 200000){
        return (elements);
      }
    });
   
    console.log(population);
   };

 xhr.send();

OUTPUT:
63) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, 
{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]

Print the total population of countries using reduce function

SOLN:

var xhr = new XMLHttpRequest();
   xhr.open("GET", "https://restcountries.eu/rest/v2/all");
   xhr.onload = function () {
   
    var data = JSON.parse(this.response);
    let totalPopulation = data.reduce((accumulator,currentValue)=>{
      return (accumulator + currentValue.population);
    },0);
    
    console.log(totalPopulation);
   };

 xhr.send();

OUTPUT:
7349137231

Print the country which uses US Dollars as currency.

SOLN:

